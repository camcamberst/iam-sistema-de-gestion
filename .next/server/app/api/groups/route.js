"use strict";(()=>{var e={};e.id=7475,e.ids=[7475],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},59796:e=>{e.exports=require("zlib")},81398:(e,r,o)=>{o.r(r),o.d(r,{headerHooks:()=>D,originalPathname:()=>f,patchFetch:()=>A,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>h});var s={};o.r(s),o.d(s,{GET:()=>l,POST:()=>c});var t=o(95419),a=o(69108),n=o(99678),u=o(78070),i=o(66569);async function l(e){try{console.log("\uD83C\uDFE2 [API] Obteniendo grupos...");let r=i.R,o=e.headers.get("authorization"),s="admin",t=[];if(o)try{let e=o.replace("Bearer ",""),{data:{user:r},error:a}=await i.A.auth.getUser(e);if(!a&&r){let{data:e,error:o}=await i.R.from("users").select("role, groups").eq("id",r.id).single();!o&&e&&(s=e.role,t=e.groups||[],console.log("\uD83D\uDD0D [API] Usuario:",{role:s,groups:t}))}}catch(e){console.log("⚠️ [API] No se pudo obtener info del usuario, usando defaults")}let a=r.from("groups").select("id, name, is_active, description, created_at");"super_admin"!==s&&t.length>0?(a=a.in("id",t),console.log("\uD83D\uDD12 [API] Filtrando grupos para admin:",t)):"super_admin"===s&&console.log("\uD83D\uDC51 [API] Super admin - mostrando todos los grupos");let{data:n,error:l}=await a.order("name",{ascending:!0});if(l)return console.error("❌ [API] Error obteniendo grupos:",l),u.Z.json({success:!1,error:`Error obteniendo grupos: ${l.message}`},{status:500});return console.log("✅ [API] Grupos obtenidos:",n?.length||0,"para rol:",s),u.Z.json({success:!0,groups:n||[],userRole:s})}catch(e){return console.error("❌ [API] Error general:",e),u.Z.json({success:!1,error:`Error interno: ${e.message}`},{status:500})}}async function c(e){try{let r=await e.json();if(r.userRole&&r.userGroups){console.log("\uD83C\uDFE2 [API] Obteniendo grupos con info del usuario...");let e=i.R,o=r.userRole,s=r.userGroups;console.log("\uD83D\uDD0D [API] Usuario desde body:",{role:o,groups:s});let t=e.from("groups").select("id, name, is_active, description, created_at");"super_admin"!==o&&s.length>0?(t=t.in("id",s),console.log("\uD83D\uDD12 [API] Filtrando grupos para admin:",s)):"super_admin"===o&&console.log("\uD83D\uDC51 [API] Super admin - mostrando todos los grupos");let{data:a,error:n}=await t.order("name",{ascending:!0});if(n)return console.error("❌ [API] Error obteniendo grupos:",n),u.Z.json({success:!1,error:`Error obteniendo grupos: ${n.message}`},{status:500});return console.log("✅ [API] Grupos obtenidos:",a?.length||0,"para rol:",o),u.Z.json({success:!0,groups:a||[],userRole:o})}console.log("\uD83C\uDFE2 [API] Creando grupo...");let{name:o}=r;if(!o||!o.trim())return u.Z.json({success:!1,error:"El nombre del grupo es requerido"},{status:400});let s=i.R,t=e.headers.get("authorization"),a="admin";if(t)try{let e=t.replace("Bearer ",""),{data:{user:r},error:o}=await i.A.auth.getUser(e);if(!o&&r){let{data:e,error:o}=await i.R.from("users").select("role").eq("id",r.id).single();!o&&e&&(a=e.role)}}catch(e){console.log("⚠️ [API] No se pudo obtener info del usuario")}if("super_admin"!==a)return u.Z.json({success:!1,error:"Solo los super administradores pueden crear grupos"},{status:403});let{data:n,error:l}=await s.from("groups").insert({name:o.trim(),organization_id:"00000000-0000-0000-0000-000000000000",is_active:!0}).select("id, name, is_active, description, created_at").single();if(l){if(console.error("❌ [API] Error creando grupo:",l),"23505"===l.code)return u.Z.json({success:!1,error:"Ya existe un grupo con ese nombre"},{status:400});return u.Z.json({success:!1,error:"Error creando grupo"},{status:500})}return console.log("✅ [API] Grupo creado:",n),u.Z.json({success:!0,group:n})}catch(e){return console.error("❌ [API] Error general:",e),u.Z.json({success:!1,error:"Error interno"},{status:500})}}let d=new t.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/groups/route",pathname:"/api/groups",filename:"route",bundlePath:"app/api/groups/route"},resolvedPagePath:"C:\\Users\\camca\\OneDrive\\Documentos\\GitHub\\iam-sistema-de-gestion\\app\\api\\groups\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:m,headerHooks:D,staticGenerationBailout:h}=d,f="/api/groups/route";function A(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},66569:(e,r,o)=>{o.d(r,{A:()=>u,R:()=>n});var s=o(72964);let t="https://mhernfrkvwigxdubiozm.supabase.co",a=process.env.SUPABASE_SERVICE_ROLE_KEY||"",n=(0,s.createClient)(t,a,{auth:{autoRefreshToken:!1,persistSession:!1}}),u=(0,s.createClient)(t,a,{auth:{autoRefreshToken:!1,persistSession:!1}})}};var r=require("../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),s=r.X(0,[1638,6206,2964],()=>o(81398));module.exports=s})();