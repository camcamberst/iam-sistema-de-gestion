"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/calculator/period-closure/manual-close/route";
exports.ids = ["app/api/calculator/period-closure/manual-close/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&page=%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute.ts&appDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&page=%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute.ts&appDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_camca_OneDrive_Documentos_GitHub_iam_sistema_de_gestion_app_api_calculator_period_closure_manual_close_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/calculator/period-closure/manual-close/route.ts */ \"(rsc)/./app/api/calculator/period-closure/manual-close/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/calculator/period-closure/manual-close/route\",\n        pathname: \"/api/calculator/period-closure/manual-close\",\n        filename: \"route\",\n        bundlePath: \"app/api/calculator/period-closure/manual-close/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\camca\\\\OneDrive\\\\Documentos\\\\GitHub\\\\iam-sistema-de-gestion\\\\app\\\\api\\\\calculator\\\\period-closure\\\\manual-close\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_camca_OneDrive_Documentos_GitHub_iam_sistema_de_gestion_app_api_calculator_period_closure_manual_close_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/calculator/period-closure/manual-close/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjYWxjdWxhdG9yJTJGcGVyaW9kLWNsb3N1cmUlMkZtYW51YWwtY2xvc2UlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNhbGN1bGF0b3IlMkZwZXJpb2QtY2xvc3VyZSUyRm1hbnVhbC1jbG9zZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNhbGN1bGF0b3IlMkZwZXJpb2QtY2xvc3VyZSUyRm1hbnVhbC1jbG9zZSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNjYW1jYSU1Q09uZURyaXZlJTVDRG9jdW1lbnRvcyU1Q0dpdEh1YiU1Q2lhbS1zaXN0ZW1hLWRlLWdlc3Rpb24lNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2NhbWNhJTVDT25lRHJpdmUlNUNEb2N1bWVudG9zJTVDR2l0SHViJTVDaWFtLXNpc3RlbWEtZGUtZ2VzdGlvbiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNvRjtBQUNqSztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL3Npc3RlbWEtZ2VzdGlvbi1haW0vPzIyNGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcY2FtY2FcXFxcT25lRHJpdmVcXFxcRG9jdW1lbnRvc1xcXFxHaXRIdWJcXFxcaWFtLXNpc3RlbWEtZGUtZ2VzdGlvblxcXFxhcHBcXFxcYXBpXFxcXGNhbGN1bGF0b3JcXFxccGVyaW9kLWNsb3N1cmVcXFxcbWFudWFsLWNsb3NlXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jYWxjdWxhdG9yL3BlcmlvZC1jbG9zdXJlL21hbnVhbC1jbG9zZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NhbGN1bGF0b3IvcGVyaW9kLWNsb3N1cmUvbWFudWFsLWNsb3NlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jYWxjdWxhdG9yL3BlcmlvZC1jbG9zdXJlL21hbnVhbC1jbG9zZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGNhbWNhXFxcXE9uZURyaXZlXFxcXERvY3VtZW50b3NcXFxcR2l0SHViXFxcXGlhbS1zaXN0ZW1hLWRlLWdlc3Rpb25cXFxcYXBwXFxcXGFwaVxcXFxjYWxjdWxhdG9yXFxcXHBlcmlvZC1jbG9zdXJlXFxcXG1hbnVhbC1jbG9zZVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jYWxjdWxhdG9yL3BlcmlvZC1jbG9zdXJlL21hbnVhbC1jbG9zZS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&page=%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute.ts&appDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/calculator/period-closure/manual-close/route.ts":
/*!*****************************************************************!*\
  !*** ./app/api/calculator/period-closure/manual-close/route.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _utils_period_closure_dates__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/period-closure-dates */ \"(rsc)/./utils/period-closure-dates.ts\");\n/* harmony import */ var _lib_calculator_period_closure_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/calculator/period-closure-helpers */ \"(rsc)/./lib/calculator/period-closure-helpers.ts\");\n/* harmony import */ var _lib_calculator_period_closure_states__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/calculator/period-closure-states */ \"(rsc)/./lib/calculator/period-closure-states.ts\");\n\n\n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_4__.createClient)(\"https://mhernfrkvwigxdubiozm.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\n/**\r\n * POST: Cierre manual para casos de recuperación\r\n * Solo para admins/super_admins\r\n */ async function POST(request) {\n    try {\n        // Verificar autorización\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader?.startsWith(\"Bearer \")) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"Token de autorizaci\\xf3n requerido\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.split(\" \")[1];\n        const { data: { user }, error: authError } = await supabase.auth.getUser(token);\n        if (authError || !user) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"Token inv\\xe1lido\"\n            }, {\n                status: 401\n            });\n        }\n        // Verificar que es admin o super_admin\n        const { data: userData } = await supabase.from(\"users\").select(\"role\").eq(\"id\", user.id).single();\n        if (!userData || userData.role !== \"admin\" && userData.role !== \"super_admin\") {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"No tienes permisos para realizar cierre manual\"\n            }, {\n                status: 403\n            });\n        }\n        const body = await request.json();\n        const { periodDate, targetStatus, force } = body;\n        if (!periodDate || !targetStatus) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"periodDate y targetStatus son requeridos\"\n            }, {\n                status: 400\n            });\n        }\n        const currentDate = periodDate || (0,_utils_period_closure_dates__WEBPACK_IMPORTED_MODULE_1__.getColombiaDate)();\n        const periodType = (0,_utils_period_closure_dates__WEBPACK_IMPORTED_MODULE_1__.getCurrentPeriodType)();\n        // Obtener estado actual\n        const { data: currentStatus } = await supabase.from(\"calculator_period_closure_status\").select(\"*\").eq(\"period_date\", currentDate).order(\"created_at\", {\n            ascending: false\n        }).limit(1).single();\n        if (currentStatus && !force) {\n            // Verificar transición válida\n            if (!(0,_lib_calculator_period_closure_states__WEBPACK_IMPORTED_MODULE_3__.isValidTransition)(currentStatus.status, targetStatus)) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    success: false,\n                    error: `Transición inválida: ${currentStatus.status} -> ${targetStatus}`,\n                    current_status: currentStatus.status,\n                    valid_next: [\n                        \"pending\",\n                        \"early_freezing\",\n                        \"closing_calculators\",\n                        \"waiting_summary\",\n                        \"closing_summary\",\n                        \"archiving\",\n                        \"completed\",\n                        \"failed\"\n                    ]\n                }, {\n                    status: 400\n                });\n            }\n        }\n        // Actualizar estado\n        await (0,_lib_calculator_period_closure_helpers__WEBPACK_IMPORTED_MODULE_2__.updateClosureStatus)(currentDate, periodType, targetStatus, {\n            manual_closure: true,\n            executed_by: user.id,\n            executed_at: new Date().toISOString(),\n            previous_status: currentStatus?.status || null\n        });\n        console.log(`✅ [MANUAL-CLOSE] Estado actualizado manualmente: ${currentStatus?.status || \"none\"} -> ${targetStatus}`);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: \"Estado actualizado manualmente\",\n            period_date: currentDate,\n            period_type: periodType,\n            previous_status: currentStatus?.status || null,\n            new_status: targetStatus,\n            executed_by: user.id\n        });\n    } catch (error) {\n        console.error(\"❌ [MANUAL-CLOSE] Error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Error interno del servidor\",\n            details: error instanceof Error ? error.message : \"Error desconocido\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/calculator/period-closure/manual-close/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/calculator/period-closure-helpers.ts":
/*!**************************************************!*\
  !*** ./lib/calculator/period-closure-helpers.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   archiveModelValues: () => (/* binding */ archiveModelValues),\n/* harmony export */   freezePlatformsForModel: () => (/* binding */ freezePlatformsForModel),\n/* harmony export */   getFrozenPlatformsForModel: () => (/* binding */ getFrozenPlatformsForModel),\n/* harmony export */   isPlatformFrozen: () => (/* binding */ isPlatformFrozen),\n/* harmony export */   resetModelValues: () => (/* binding */ resetModelValues),\n/* harmony export */   updateClosureStatus: () => (/* binding */ updateClosureStatus)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/**\r\n * 🔧 HELPERS PARA CIERRE DE PERÍODOS\r\n * \r\n * Funciones auxiliares para el proceso de cierre\r\n */ \nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://mhernfrkvwigxdubiozm.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\n/**\r\n * Crea o actualiza el estado de cierre de período\r\n */ const updateClosureStatus = async (periodDate, periodType, status, metadata)=>{\n    try {\n        // Verificar si existe registro\n        const { data: existing } = await supabase.from(\"calculator_period_closure_status\").select(\"id\").eq(\"period_date\", periodDate).single();\n        if (existing) {\n            // Actualizar\n            const { error } = await supabase.from(\"calculator_period_closure_status\").update({\n                status,\n                metadata: metadata || {},\n                updated_at: new Date().toISOString()\n            }).eq(\"id\", existing.id);\n            if (error) throw error;\n        } else {\n            // Crear nuevo\n            const { error } = await supabase.from(\"calculator_period_closure_status\").insert({\n                period_date: periodDate,\n                period_type: periodType,\n                status,\n                metadata: metadata || {}\n            });\n            if (error) throw error;\n        }\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error(\"❌ [CLOSURE-HELPERS] Error actualizando estado:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Error desconocido\"\n        };\n    }\n};\n/**\r\n * Marca plataformas como congeladas anticipadamente\r\n */ const freezePlatformsForModel = async (periodDate, modelId, platformIds)=>{\n    try {\n        const records = platformIds.map((platformId)=>({\n                period_date: periodDate,\n                model_id: modelId,\n                platform_id: platformId,\n                frozen_at: new Date().toISOString()\n            }));\n        // Usar upsert para evitar duplicados\n        const { error } = await supabase.from(\"calculator_early_frozen_platforms\").upsert(records, {\n            onConflict: \"period_date,model_id,platform_id\",\n            ignoreDuplicates: false\n        });\n        if (error) throw error;\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error(\"❌ [CLOSURE-HELPERS] Error congelando plataformas:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Error desconocido\"\n        };\n    }\n};\n/**\r\n * Verifica si una plataforma está congelada para un modelo\r\n */ const isPlatformFrozen = async (periodDate, modelId, platformId)=>{\n    try {\n        const { data, error } = await supabase.from(\"calculator_early_frozen_platforms\").select(\"id\").eq(\"period_date\", periodDate).eq(\"model_id\", modelId).eq(\"platform_id\", platformId).single();\n        if (error && error.code !== \"PGRST116\") throw error;\n        return !!data;\n    } catch (error) {\n        console.error(\"❌ [CLOSURE-HELPERS] Error verificando congelaci\\xf3n:\", error);\n        return false;\n    }\n};\n/**\r\n * Obtiene todas las plataformas congeladas para un modelo\r\n */ const getFrozenPlatformsForModel = async (periodDate, modelId)=>{\n    try {\n        const { data, error } = await supabase.from(\"calculator_early_frozen_platforms\").select(\"platform_id\").eq(\"period_date\", periodDate).eq(\"model_id\", modelId);\n        if (error) throw error;\n        return data?.map((r)=>r.platform_id) || [];\n    } catch (error) {\n        console.error(\"❌ [CLOSURE-HELPERS] Error obteniendo plataformas congeladas:\", error);\n        return [];\n    }\n};\n/**\r\n * Archiva valores de un modelo para el período\r\n */ const archiveModelValues = async (modelId, periodDate, periodType)=>{\n    try {\n        // Obtener valores actuales\n        const { data: values, error: valuesError } = await supabase.from(\"model_values\").select(\"*\").eq(\"model_id\", modelId).eq(\"period_date\", periodDate);\n        if (valuesError) throw valuesError;\n        if (!values || values.length === 0) {\n            return {\n                success: true,\n                archived: 0\n            };\n        }\n        // Preparar datos históricos\n        const historicalData = values.map((value)=>({\n                model_id: value.model_id,\n                platform_id: value.platform_id,\n                value: value.value,\n                period_date: value.period_date,\n                period_type: periodType,\n                archived_at: new Date().toISOString(),\n                original_updated_at: value.updated_at\n            }));\n        // Insertar en historial\n        const { error: archiveError } = await supabase.from(\"calculator_history\").insert(historicalData);\n        if (archiveError) throw archiveError;\n        return {\n            success: true,\n            archived: values.length\n        };\n    } catch (error) {\n        console.error(\"❌ [CLOSURE-HELPERS] Error archivando valores:\", error);\n        return {\n            success: false,\n            archived: 0,\n            error: error instanceof Error ? error.message : \"Error desconocido\"\n        };\n    }\n};\n/**\r\n * Resetea valores de un modelo (elimina del período actual)\r\n */ const resetModelValues = async (modelId, periodDate)=>{\n    try {\n        const { data, error } = await supabase.from(\"model_values\").delete().eq(\"model_id\", modelId).eq(\"period_date\", periodDate).select();\n        if (error) throw error;\n        return {\n            success: true,\n            deleted: data?.length || 0\n        };\n    } catch (error) {\n        console.error(\"❌ [CLOSURE-HELPERS] Error reseteando valores:\", error);\n        return {\n            success: false,\n            deleted: 0,\n            error: error instanceof Error ? error.message : \"Error desconocido\"\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/calculator/period-closure-helpers.ts\n");

/***/ }),

/***/ "(rsc)/./lib/calculator/period-closure-states.ts":
/*!*************************************************!*\
  !*** ./lib/calculator/period-closure-states.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STATUS_DESCRIPTIONS: () => (/* binding */ STATUS_DESCRIPTIONS),\n/* harmony export */   VALID_TRANSITIONS: () => (/* binding */ VALID_TRANSITIONS),\n/* harmony export */   getNextValidStates: () => (/* binding */ getNextValidStates),\n/* harmony export */   isValidTransition: () => (/* binding */ isValidTransition)\n/* harmony export */ });\n/**\r\n * 🔄 ESTADOS Y TRANSICIONES DEL CIERRE DE PERÍODOS\r\n * \r\n * Define los estados válidos del proceso de cierre y sus transiciones permitidas\r\n */ const VALID_TRANSITIONS = {\n    pending: [\n        \"early_freezing\",\n        \"closing_calculators\",\n        \"failed\"\n    ],\n    early_freezing: [\n        \"closing_calculators\",\n        \"failed\"\n    ],\n    closing_calculators: [\n        \"waiting_summary\",\n        \"failed\"\n    ],\n    waiting_summary: [\n        \"closing_summary\",\n        \"failed\"\n    ],\n    closing_summary: [\n        \"archiving\",\n        \"failed\"\n    ],\n    archiving: [\n        \"completed\",\n        \"failed\"\n    ],\n    completed: [],\n    failed: [\n        \"pending\"\n    ] // Solo para retry manual\n};\n/**\r\n * Verifica si una transición de estado es válida\r\n */ const isValidTransition = (from, to)=>{\n    return VALID_TRANSITIONS[from]?.includes(to) || false;\n};\n/**\r\n * Obtiene la siguiente transición válida desde un estado\r\n */ const getNextValidStates = (currentStatus)=>{\n    return VALID_TRANSITIONS[currentStatus] || [];\n};\n/**\r\n * Descripción de cada estado para UI/logs\r\n */ const STATUS_DESCRIPTIONS = {\n    pending: \"Prepar\\xe1ndose para cerrar\",\n    early_freezing: \"Congelando plataformas especiales\",\n    closing_calculators: \"Cerrando calculadoras\",\n    waiting_summary: \"Esperando \\xfaltima actualizaci\\xf3n del resumen\",\n    closing_summary: \"Cerrando resumen de facturaci\\xf3n\",\n    archiving: \"Archivando per\\xedodo\",\n    completed: \"Cierre completado\",\n    failed: \"Error en el cierre\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvY2FsY3VsYXRvci9wZXJpb2QtY2xvc3VyZS1zdGF0ZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0NBSUMsR0FZTSxNQUFNQSxvQkFBNEQ7SUFDdkVDLFNBQVM7UUFBQztRQUFrQjtRQUF1QjtLQUFTO0lBQzVEQyxnQkFBZ0I7UUFBQztRQUF1QjtLQUFTO0lBQ2pEQyxxQkFBcUI7UUFBQztRQUFtQjtLQUFTO0lBQ2xEQyxpQkFBaUI7UUFBQztRQUFtQjtLQUFTO0lBQzlDQyxpQkFBaUI7UUFBQztRQUFhO0tBQVM7SUFDeENDLFdBQVc7UUFBQztRQUFhO0tBQVM7SUFDbENDLFdBQVcsRUFBRTtJQUNiQyxRQUFRO1FBQUM7S0FBVSxDQUFDLHlCQUF5QjtBQUMvQyxFQUFFO0FBRUY7O0NBRUMsR0FDTSxNQUFNQyxvQkFBb0IsQ0FDL0JDLE1BQ0FDO0lBRUEsT0FBT1gsaUJBQWlCLENBQUNVLEtBQUssRUFBRUUsU0FBU0QsT0FBTztBQUNsRCxFQUFFO0FBRUY7O0NBRUMsR0FDTSxNQUFNRSxxQkFBcUIsQ0FBQ0M7SUFDakMsT0FBT2QsaUJBQWlCLENBQUNjLGNBQWMsSUFBSSxFQUFFO0FBQy9DLEVBQUU7QUFFRjs7Q0FFQyxHQUNNLE1BQU1DLHNCQUFxRDtJQUNoRWQsU0FBUztJQUNUQyxnQkFBZ0I7SUFDaEJDLHFCQUFxQjtJQUNyQkMsaUJBQWlCO0lBQ2pCQyxpQkFBaUI7SUFDakJDLFdBQVc7SUFDWEMsV0FBVztJQUNYQyxRQUFRO0FBQ1YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Npc3RlbWEtZ2VzdGlvbi1haW0vLi9saWIvY2FsY3VsYXRvci9wZXJpb2QtY2xvc3VyZS1zdGF0ZXMudHM/NmUwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICog8J+UhCBFU1RBRE9TIFkgVFJBTlNJQ0lPTkVTIERFTCBDSUVSUkUgREUgUEVSw41PRE9TXHJcbiAqIFxyXG4gKiBEZWZpbmUgbG9zIGVzdGFkb3MgdsOhbGlkb3MgZGVsIHByb2Nlc28gZGUgY2llcnJlIHkgc3VzIHRyYW5zaWNpb25lcyBwZXJtaXRpZGFzXHJcbiAqL1xyXG5cclxuZXhwb3J0IHR5cGUgQ2xvc3VyZVN0YXR1cyA9IFxyXG4gIHwgJ3BlbmRpbmcnXHJcbiAgfCAnZWFybHlfZnJlZXppbmcnXHJcbiAgfCAnY2xvc2luZ19jYWxjdWxhdG9ycydcclxuICB8ICd3YWl0aW5nX3N1bW1hcnknXHJcbiAgfCAnY2xvc2luZ19zdW1tYXJ5J1xyXG4gIHwgJ2FyY2hpdmluZydcclxuICB8ICdjb21wbGV0ZWQnXHJcbiAgfCAnZmFpbGVkJztcclxuXHJcbmV4cG9ydCBjb25zdCBWQUxJRF9UUkFOU0lUSU9OUzogUmVjb3JkPENsb3N1cmVTdGF0dXMsIENsb3N1cmVTdGF0dXNbXT4gPSB7XHJcbiAgcGVuZGluZzogWydlYXJseV9mcmVlemluZycsICdjbG9zaW5nX2NhbGN1bGF0b3JzJywgJ2ZhaWxlZCddLFxyXG4gIGVhcmx5X2ZyZWV6aW5nOiBbJ2Nsb3NpbmdfY2FsY3VsYXRvcnMnLCAnZmFpbGVkJ10sXHJcbiAgY2xvc2luZ19jYWxjdWxhdG9yczogWyd3YWl0aW5nX3N1bW1hcnknLCAnZmFpbGVkJ10sXHJcbiAgd2FpdGluZ19zdW1tYXJ5OiBbJ2Nsb3Npbmdfc3VtbWFyeScsICdmYWlsZWQnXSxcclxuICBjbG9zaW5nX3N1bW1hcnk6IFsnYXJjaGl2aW5nJywgJ2ZhaWxlZCddLFxyXG4gIGFyY2hpdmluZzogWydjb21wbGV0ZWQnLCAnZmFpbGVkJ10sXHJcbiAgY29tcGxldGVkOiBbXSxcclxuICBmYWlsZWQ6IFsncGVuZGluZyddIC8vIFNvbG8gcGFyYSByZXRyeSBtYW51YWxcclxufTtcclxuXHJcbi8qKlxyXG4gKiBWZXJpZmljYSBzaSB1bmEgdHJhbnNpY2nDs24gZGUgZXN0YWRvIGVzIHbDoWxpZGFcclxuICovXHJcbmV4cG9ydCBjb25zdCBpc1ZhbGlkVHJhbnNpdGlvbiA9IChcclxuICBmcm9tOiBDbG9zdXJlU3RhdHVzLFxyXG4gIHRvOiBDbG9zdXJlU3RhdHVzXHJcbik6IGJvb2xlYW4gPT4ge1xyXG4gIHJldHVybiBWQUxJRF9UUkFOU0lUSU9OU1tmcm9tXT8uaW5jbHVkZXModG8pIHx8IGZhbHNlO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIE9idGllbmUgbGEgc2lndWllbnRlIHRyYW5zaWNpw7NuIHbDoWxpZGEgZGVzZGUgdW4gZXN0YWRvXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2V0TmV4dFZhbGlkU3RhdGVzID0gKGN1cnJlbnRTdGF0dXM6IENsb3N1cmVTdGF0dXMpOiBDbG9zdXJlU3RhdHVzW10gPT4ge1xyXG4gIHJldHVybiBWQUxJRF9UUkFOU0lUSU9OU1tjdXJyZW50U3RhdHVzXSB8fCBbXTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEZXNjcmlwY2nDs24gZGUgY2FkYSBlc3RhZG8gcGFyYSBVSS9sb2dzXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgU1RBVFVTX0RFU0NSSVBUSU9OUzogUmVjb3JkPENsb3N1cmVTdGF0dXMsIHN0cmluZz4gPSB7XHJcbiAgcGVuZGluZzogJ1ByZXBhcsOhbmRvc2UgcGFyYSBjZXJyYXInLFxyXG4gIGVhcmx5X2ZyZWV6aW5nOiAnQ29uZ2VsYW5kbyBwbGF0YWZvcm1hcyBlc3BlY2lhbGVzJyxcclxuICBjbG9zaW5nX2NhbGN1bGF0b3JzOiAnQ2VycmFuZG8gY2FsY3VsYWRvcmFzJyxcclxuICB3YWl0aW5nX3N1bW1hcnk6ICdFc3BlcmFuZG8gw7psdGltYSBhY3R1YWxpemFjacOzbiBkZWwgcmVzdW1lbicsXHJcbiAgY2xvc2luZ19zdW1tYXJ5OiAnQ2VycmFuZG8gcmVzdW1lbiBkZSBmYWN0dXJhY2nDs24nLFxyXG4gIGFyY2hpdmluZzogJ0FyY2hpdmFuZG8gcGVyw61vZG8nLFxyXG4gIGNvbXBsZXRlZDogJ0NpZXJyZSBjb21wbGV0YWRvJyxcclxuICBmYWlsZWQ6ICdFcnJvciBlbiBlbCBjaWVycmUnXHJcbn07XHJcblxyXG4iXSwibmFtZXMiOlsiVkFMSURfVFJBTlNJVElPTlMiLCJwZW5kaW5nIiwiZWFybHlfZnJlZXppbmciLCJjbG9zaW5nX2NhbGN1bGF0b3JzIiwid2FpdGluZ19zdW1tYXJ5IiwiY2xvc2luZ19zdW1tYXJ5IiwiYXJjaGl2aW5nIiwiY29tcGxldGVkIiwiZmFpbGVkIiwiaXNWYWxpZFRyYW5zaXRpb24iLCJmcm9tIiwidG8iLCJpbmNsdWRlcyIsImdldE5leHRWYWxpZFN0YXRlcyIsImN1cnJlbnRTdGF0dXMiLCJTVEFUVVNfREVTQ1JJUFRJT05TIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/calculator/period-closure-states.ts\n");

/***/ }),

/***/ "(rsc)/./utils/period-closure-dates.ts":
/*!***************************************!*\
  !*** ./utils/period-closure-dates.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EARLY_FREEZE_PLATFORMS: () => (/* binding */ EARLY_FREEZE_PLATFORMS),\n/* harmony export */   getColombiaDate: () => (/* binding */ getColombiaDate),\n/* harmony export */   getColombiaDateTime: () => (/* binding */ getColombiaDateTime),\n/* harmony export */   getColombiaMidnight: () => (/* binding */ getColombiaMidnight),\n/* harmony export */   getCurrentPeriodType: () => (/* binding */ getCurrentPeriodType),\n/* harmony export */   getEuropeanCentralMidnightInColombia: () => (/* binding */ getEuropeanCentralMidnightInColombia),\n/* harmony export */   isClosureDay: () => (/* binding */ isClosureDay),\n/* harmony export */   isEarlyFreezePlatform: () => (/* binding */ isEarlyFreezePlatform),\n/* harmony export */   isEarlyFreezeTime: () => (/* binding */ isEarlyFreezeTime),\n/* harmony export */   isFullClosureTime: () => (/* binding */ isFullClosureTime)\n/* harmony export */ });\n/**\r\n * 🕐 UTILIDADES DE FECHAS PARA CIERRE DE PERÍODOS\r\n * \r\n * Calcula medianoche Europa Central en hora Colombia y gestiona\r\n * los momentos de congelación y cierre de períodos.\r\n * \r\n * IMPORTANTE: Todo se calcula en timezone Colombia (America/Bogota)\r\n */ /**\r\n * Obtiene la fecha actual en formato YYYY-MM-DD usando Colombia\r\n */ const getColombiaDate = ()=>{\n    return new Date().toLocaleDateString(\"en-CA\", {\n        timeZone: \"America/Bogota\"\n    });\n};\n/**\r\n * Obtiene la fecha y hora actual en formato ISO usando Colombia\r\n */ const getColombiaDateTime = ()=>{\n    return new Date().toLocaleString(\"sv-SE\", {\n        timeZone: \"America/Bogota\"\n    });\n};\n/**\r\n * Calcula la medianoche de Europa Central (Europe/Berlin) en hora Colombia\r\n * @param date - Fecha de referencia (opcional, usa fecha actual si no se proporciona)\r\n * @returns Objeto con fecha/hora en Colombia y timestamp\r\n */ const getEuropeanCentralMidnightInColombia = (date)=>{\n    const now = date || new Date();\n    // Obtener fecha de hoy en Europa Central\n    const europeDateFormatter = new Intl.DateTimeFormat(\"en-CA\", {\n        timeZone: \"Europe/Berlin\",\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n    });\n    const europeDateStr = europeDateFormatter.format(now); // YYYY-MM-DD\n    // Crear Date object que representa medianoche en Europa Central\n    // Necesitamos crear un string ISO que JavaScript interprete correctamente\n    // Usamos el formato: YYYY-MM-DDTHH:mm:ss+offset\n    // Pero primero necesitamos saber qué hora es medianoche Europa Central en UTC\n    // Método más simple: crear Date con string ISO usando timezone\n    // JavaScript Date no soporta timezone en constructor, así que usamos otro enfoque\n    // Calcular qué hora UTC corresponde a medianoche en Europa Central\n    // Para esto, creamos una fecha \"test\" en medianoche Europa Central\n    const testFormatter = new Intl.DateTimeFormat(\"en-US\", {\n        timeZone: \"Europe/Berlin\",\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        hour12: false\n    });\n    // Obtener hora actual en Europa Central\n    const parts = testFormatter.formatToParts(now);\n    const europeParts = {};\n    parts.forEach((part)=>{\n        if (part.type !== \"literal\") {\n            europeParts[part.type] = part.value;\n        }\n    });\n    // Crear fecha ISO string para medianoche Europa Central\n    const europeMidnightISO = `${europeParts.year}-${europeParts.month}-${europeParts.day}T00:00:00`;\n    // Ahora necesitamos convertir esto a hora Colombia\n    // Para esto, usamos el hecho de que JavaScript Date trabaja en UTC\n    // Pero podemos usar una fecha \"falsa\" y luego calcular la diferencia\n    // Método más directo: usar la API de tiempo para obtener offset\n    // Crear un Date para medianoche en Europa Central\n    const europeYear = parseInt(europeParts.year);\n    const europeMonth = parseInt(europeParts.month) - 1; // 0-based\n    const europeDay = parseInt(europeParts.day);\n    // Crear Date en UTC que represente medianoche en Europa Central\n    // Necesitamos saber el offset de Europa Central en ese momento\n    const testDateUTC = new Date(Date.UTC(europeYear, europeMonth, europeDay, 0, 0, 0));\n    // Calcular offset de Europa Central en ese momento\n    const europeOffset = getEuropeCentralOffset(testDateUTC); // Horas desde UTC\n    const europeMidnightUTC = new Date(Date.UTC(europeYear, europeMonth, europeDay, -europeOffset, 0, 0));\n    // Colombia es UTC-5, así que restamos 5 horas\n    const colombiaMidnight = new Date(europeMidnightUTC.getTime() - 5 * 3600000);\n    // Formatear resultado\n    const colombiaDate = colombiaMidnight.toLocaleDateString(\"en-CA\", {\n        timeZone: \"America/Bogota\"\n    });\n    const colombiaTime = colombiaMidnight.toLocaleTimeString(\"en-US\", {\n        timeZone: \"America/Bogota\",\n        hour12: false,\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n    });\n    return {\n        colombiaTime: colombiaTime || \"00:00:00\",\n        colombiaDate,\n        colombiaDateTime: colombiaMidnight,\n        europeDate: europeDateStr\n    };\n};\n/**\r\n * Obtiene el offset de Europa Central en horas (considera DST)\r\n * @param date - Fecha de referencia\r\n * @returns Offset en horas (1 para invierno, 2 para verano)\r\n */ function getEuropeCentralOffset(date) {\n    // Obtener la hora UTC y la hora en Europa Central para la misma fecha\n    const utcHour = date.getUTCHours();\n    // Crear formatter para Europa Central\n    const formatter = new Intl.DateTimeFormat(\"en-US\", {\n        timeZone: \"Europe/Berlin\",\n        hour: \"2-digit\",\n        hour12: false\n    });\n    const europeHour = parseInt(formatter.format(date));\n    // Calcular diferencia (considerando que puede cruzar medianoche)\n    let offset = europeHour - utcHour;\n    if (offset > 12) offset -= 24;\n    if (offset < -12) offset += 24;\n    return offset;\n}\n/**\r\n * Obtiene medianoche Colombia (00:00:00)\r\n * @param date - Fecha de referencia (opcional)\r\n * @returns Fecha/hora de medianoche en Colombia\r\n */ const getColombiaMidnight = (date)=>{\n    const now = date || new Date();\n    const colombiaDate = getColombiaDate();\n    const midnight = new Date(`${colombiaDate}T00:00:00`);\n    return {\n        date: colombiaDate,\n        datetime: midnight,\n        time: \"00:00:00\"\n    };\n};\n/**\r\n * Verifica si es momento de congelar plataformas especiales\r\n * (medianoche Europa Central)\r\n * @returns true si es momento de congelación anticipada\r\n */ const isEarlyFreezeTime = ()=>{\n    const now = new Date();\n    const colombiaTime = getColombiaDateTime();\n    const europeMidnight = getEuropeanCentralMidnightInColombia(now);\n    // Comparar hora actual Colombia con hora de medianoche Europa Central en Colombia\n    const [currentHour, currentMinute] = colombiaTime.split(\" \")[1]?.split(\":\") || [\n        \"00\",\n        \"00\"\n    ];\n    const [targetHour, targetMinute] = europeMidnight.colombiaTime.split(\":\");\n    const currentTime = parseInt(currentHour) * 60 + parseInt(currentMinute);\n    const targetTime = parseInt(targetHour) * 60 + parseInt(targetMinute);\n    // Tolerancia de ±5 minutos\n    const tolerance = 5;\n    return Math.abs(currentTime - targetTime) <= tolerance;\n};\n/**\r\n * Verifica si es momento de cierre completo (00:00 Colombia)\r\n * @returns true si es medianoche en Colombia\r\n */ const isFullClosureTime = ()=>{\n    const now = new Date();\n    const colombiaTime = getColombiaDateTime();\n    const [hour, minute, second] = colombiaTime.split(\" \")[1]?.split(\":\") || [\n        \"00\",\n        \"00\",\n        \"00\"\n    ];\n    // Verificar si es medianoche (00:00:00) con tolerancia de ±1 minuto\n    const isMidnight = parseInt(hour) === 0 && parseInt(minute) <= 1;\n    return isMidnight;\n};\n/**\r\n * Lista de 10 plataformas especiales que se congelan a medianoche Europa Central\r\n */ const EARLY_FREEZE_PLATFORMS = [\n    \"superfoon\",\n    \"livecreator\",\n    \"mdh\",\n    \"777\",\n    \"xmodels\",\n    \"big7\",\n    \"mondo\",\n    \"vx\",\n    \"babestation\",\n    \"dirtyfans\"\n];\n/**\r\n * Verifica si una plataforma es especial (se congela anticipadamente)\r\n * @param platformId - ID de la plataforma\r\n * @returns true si es plataforma especial\r\n */ const isEarlyFreezePlatform = (platformId)=>{\n    return EARLY_FREEZE_PLATFORMS.includes(platformId.toLowerCase());\n};\n/**\r\n * Obtiene el período actual basado en el día\r\n * @returns Período: '1-15' o '16-31'\r\n */ const getCurrentPeriodType = ()=>{\n    const colombiaDate = getColombiaDate();\n    const day = parseInt(colombiaDate.split(\"-\")[2]);\n    return day >= 1 && day <= 15 ? \"1-15\" : \"16-31\";\n};\n/**\r\n * Verifica si es día de cierre (día 1 o 16)\r\n * @returns true si es día de cierre\r\n */ const isClosureDay = ()=>{\n    const colombiaDate = getColombiaDate();\n    const day = parseInt(colombiaDate.split(\"-\")[2]);\n    return day === 1 || day === 16;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./utils/period-closure-dates.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&page=%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcalculator%2Fperiod-closure%2Fmanual-close%2Froute.ts&appDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccamca%5COneDrive%5CDocumentos%5CGitHub%5Ciam-sistema-de-gestion&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();