"use strict";(()=>{var e={};e.id=2689,e.ids=[2689],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},94229:(e,o,t)=>{t.r(o),t.d(o,{headerHooks:()=>D,originalPathname:()=>C,patchFetch:()=>E,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>g});var n={};t.r(n),t.d(n,{GET:()=>s,POST:()=>l});var r=t(95419),a=t(69108),i=t(99678),u=t(78070),c=t(39400);async function s(e){try{console.log("\uD83D\uDD50 [CRON-SCHEDULE] Obteniendo informaci\xf3n de timezone...");let e=(0,c.kD)(),o=(0,c.px)(),t=new Date,n=[],r=new Date(t.getFullYear(),t.getMonth(),15);r<=t&&r.setMonth(r.getMonth()+1);let a=new Date(t.getFullYear(),t.getMonth(),30);return a<=t&&a.setMonth(a.getMonth()+1),n.push({date:r.toISOString().split("T")[0],description:`Cierre quincena 1 (d\xedas 1-15)`,colombiaTime:e.colombiaTimeForEuropeanMidnight,europeanTime:"00:00"}),n.push({date:a.toISOString().split("T")[0],description:`Cierre quincena 2 (d\xedas 16-31)`,colombiaTime:e.colombiaTimeForEuropeanMidnight,europeanTime:"00:00"}),u.Z.json({success:!0,timezone:e,cronSchedule:{current:o,description:`Ejecutar d\xedas 15 y 30 a las ${e.colombiaTimeForEuropeanMidnight} Colombia`,vercelFormat:o},nextClosures:n,instructions:{vercelJson:{path:"/api/cron/auto-close-calculator",schedule:o},explanation:`Este schedule ejecutar\xe1 los cierres autom\xe1ticos a las ${e.colombiaTimeForEuropeanMidnight} Colombia, que coincide con las 00:00 Europa Central`}})}catch(e){return console.error("❌ [CRON-SCHEDULE] Error:",e),u.Z.json({success:!1,error:e.message||"Error obteniendo informaci\xf3n de timezone"},{status:500})}}async function l(e){try{let{action:o}=await e.json();if("update-schedule"===o){console.log("\uD83D\uDD04 [CRON-SCHEDULE] Actualizando schedule de cron...");let e=(0,c.kD)(),o=(0,c.px)();return u.Z.json({success:!0,message:"Schedule actualizado",newSchedule:o,timezone:e,note:"Recuerda actualizar manualmente el vercel.json con el nuevo schedule"})}return u.Z.json({success:!1,error:"Acci\xf3n no v\xe1lida"},{status:400})}catch(e){return console.error("❌ [CRON-SCHEDULE] Error:",e),u.Z.json({success:!1,error:e.message||"Error actualizando schedule"},{status:500})}}let d=new r.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/admin/update-cron-schedule/route",pathname:"/api/admin/update-cron-schedule",filename:"route",bundlePath:"app/api/admin/update-cron-schedule/route"},resolvedPagePath:"C:\\Users\\camca\\OneDrive\\Documentos\\GitHub\\iam-sistema-de-gestion\\app\\api\\admin\\update-cron-schedule\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:p,serverHooks:h,headerHooks:D,staticGenerationBailout:g}=d,C="/api/admin/update-cron-schedule/route";function E(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:p})}},39400:(e,o,t)=>{function n(e=new Date){let o=e.getFullYear(),t=r(o,2),n=r(o,9);return e>=t&&e<n}function r(e,o){let t=new Date(e,o+1,0),n=t.getDay(),r=new Date(t);return r.setDate(t.getDate()-(0===n?0:n)),r}function a(e=new Date){let o=n(e);return`${(24-(o?7:6)).toString().padStart(2,"0")}:00`}function i(e=new Date){let o=n(e),t=a(e);return{isEuropeanSummerTime:o,europeanTimezone:o?"CEST (UTC+2)":"CET (UTC+1)",colombiaTimezone:"COT (UTC-5)",hourDifference:o?7:6,colombiaTimeForEuropeanMidnight:t,description:o?`Verano europeo: Medianoche Europa = ${t} Colombia (d\xeda anterior)`:`Invierno europeo: Medianoche Europa = ${t} Colombia (d\xeda anterior)`}}function u(e=new Date){let[o]=a(e).split(":").map(Number);return`0 ${o} 15,30 * *`}t.d(o,{kD:()=>i,px:()=>u}),e=t.hmd(e),t.c[t.s]===e&&(console.log("\uD83D\uDD50 Informaci\xf3n de Timezone:"),console.log(i()),console.log("\n\uD83D\uDCC5 Schedule para Vercel:"),console.log(u()))}};var o=require("../../../../webpack-runtime.js");o.C(e);var t=e=>o(o.s=e),n=o.X(0,[1638,6206],()=>t(94229));module.exports=n})();