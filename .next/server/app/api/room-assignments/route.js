"use strict";(()=>{var e={};e.id=6412,e.ids=[6412],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},59796:e=>{e.exports=require("zlib")},3700:(e,r,o)=>{o.r(r),o.d(r,{headerHooks:()=>v,originalPathname:()=>A,patchFetch:()=>O,requestAsyncStorage:()=>S,routeModule:()=>E,serverHooks:()=>f,staticGenerationAsyncStorage:()=>j,staticGenerationBailout:()=>M});var s={};o.r(s),o.d(s,{GET:()=>m,POST:()=>l});var n=o(95419),a=o(69108),t=o(99678),i=o(78070),c=o(72964);let d="https://mhernfrkvwigxdubiozm.supabase.co",u=process.env.SUPABASE_SERVICE_ROLE_KEY;async function m(e){try{let{searchParams:r}=new URL(e.url),o=r.get("roomId");if(!o)return i.Z.json({success:!1,error:"roomId requerido"},{status:400});console.log("\uD83D\uDD0D [ROOM-ASSIGNMENTS] Obteniendo asignaciones para room:",o);let s=(0,c.createClient)(d,u),{data:n,error:a}=await s.from("room_assignments_detailed").select("*").eq("room_id",o).order("jornada",{ascending:!0});if(a)return console.error("❌ [ROOM-ASSIGNMENTS] Error obteniendo asignaciones:",a),i.Z.json({success:!1,error:`Error obteniendo asignaciones: ${a.message}`},{status:500});return console.log("✅ [ROOM-ASSIGNMENTS] Asignaciones obtenidas:",n?.length||0),i.Z.json({success:!0,assignments:n||[]})}catch(e){return console.error("❌ [ROOM-ASSIGNMENTS] Error general:",e),i.Z.json({success:!1,error:"Error interno del servidor"},{status:500})}}async function l(e){try{let{action:r,model_id:o,room_id:s,jornada:n,from_room_id:a,from_jornada:t}=await e.json();if(console.log("\uD83D\uDD04 [ROOM-ASSIGNMENTS] Acci\xf3n recibida:",{action:r,model_id:o,room_id:s,jornada:n,from_room_id:a,from_jornada:t}),!r||!o||!s||!n)return i.Z.json({success:!1,error:"Faltan par\xe1metros requeridos: action, model_id, room_id, jornada"},{status:400});if(!["assign","remove","move"].includes(r))return i.Z.json({success:!1,error:"Acci\xf3n inv\xe1lida. Debe ser: assign, remove, move"},{status:400});let m=(0,c.createClient)(d,u);switch(r){case"assign":return await g(m,o,s,n);case"remove":return await p(m,o,s,n);case"move":if(!a||!t)return i.Z.json({success:!1,error:"Para mover se requiere: from_room_id, from_jornada"},{status:400});return await _(m,o,a,t,s,n);default:return i.Z.json({success:!1,error:"Acci\xf3n no implementada"},{status:400})}}catch(e){return console.error("❌ [ROOM-ASSIGNMENTS] Error general:",e),i.Z.json({success:!1,error:"Error interno del servidor"},{status:500})}}async function g(e,r,o,s){console.log("➕ [ASSIGN] Asignando modelo:",{model_id:r,room_id:o,jornada:s});let{data:n,error:a}=await e.from("room_assignments").select("id").eq("model_id",r).eq("room_id",o).eq("jornada",s).single();if(a&&"PGRST116"!==a.code)return console.error("❌ [ASSIGN] Error verificando asignaci\xf3n existente:",a),i.Z.json({success:!1,error:"Error verificando asignaci\xf3n existente"},{status:500});if(n)return i.Z.json({success:!1,error:"La modelo ya est\xe1 asignada en esta jornada y room"},{status:400});let{data:t,error:c}=await e.from("room_assignments").insert({model_id:r,room_id:o,jornada:s,assigned_at:new Date().toISOString()}).select().single();return c?(console.error("❌ [ASSIGN] Error creando asignaci\xf3n:",c),"23505"===c.code&&c.message.includes("model_id"))?i.Z.json({success:!1,error:"La modelo ya est\xe1 asignada en otra jornada"},{status:400}):c.message.includes("M\xe1ximo 2 modelos")?i.Z.json({success:!1,error:"M\xe1ximo 2 modelos permitidas por room y jornada"},{status:400}):i.Z.json({success:!1,error:"Error creando asignaci\xf3n"},{status:500}):(console.log("✅ [ASSIGN] Asignaci\xf3n creada:",t.id),i.Z.json({success:!0,message:"Modelo asignada exitosamente",assignment:t}))}async function p(e,r,o,s){console.log("\uD83D\uDDD1️ [REMOVE] Eliminando asignaci\xf3n:",{model_id:r,room_id:o,jornada:s});let{data:n,error:a}=await e.from("room_assignments").delete().eq("model_id",r).eq("room_id",o).eq("jornada",s).select().single();return a?(console.error("❌ [REMOVE] Error eliminando asignaci\xf3n:",a),"PGRST116"===a.code)?i.Z.json({success:!1,error:"Asignaci\xf3n no encontrada"},{status:404}):i.Z.json({success:!1,error:"Error eliminando asignaci\xf3n"},{status:500}):(console.log("✅ [REMOVE] Asignaci\xf3n eliminada:",n.id),i.Z.json({success:!0,message:"Modelo eliminada exitosamente",deleted_assignment:n}))}async function _(e,r,o,s,n,a){console.log("\uD83D\uDD04 [MOVE] Moviendo modelo:",{model_id:r,from:{room_id:o,jornada:s},to:{room_id:n,jornada:a}});let{data:t,error:c}=await e.rpc("move_room_assignment",{p_model_id:r,p_from_room_id:o,p_from_jornada:s,p_to_room_id:n,p_to_jornada:a});return c?(console.error("❌ [MOVE] Error moviendo asignaci\xf3n:",c),i.Z.json({success:!1,error:"Error moviendo asignaci\xf3n"},{status:500})):(console.log("✅ [MOVE] Asignaci\xf3n movida exitosamente"),i.Z.json({success:!0,message:"Modelo movida exitosamente"}))}let E=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/room-assignments/route",pathname:"/api/room-assignments",filename:"route",bundlePath:"app/api/room-assignments/route"},resolvedPagePath:"C:\\Users\\camca\\OneDrive\\Documentos\\GitHub\\iam-sistema-de-gestion\\app\\api\\room-assignments\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:S,staticGenerationAsyncStorage:j,serverHooks:f,headerHooks:v,staticGenerationBailout:M}=E,A="/api/room-assignments/route";function O(){return(0,t.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:j})}}};var r=require("../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),s=r.X(0,[1638,6206,2964],()=>o(3700));module.exports=s})();